/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC721A,
  ERC721AInterface,
} from "../../../../erc721a/contracts/ERC721A.sol/ERC721A";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b5060405162001e0c38038062001e0c833981810160405281019062000036919062000200565b8160029081620000479190620004ba565b508060039081620000599190620004ba565b506200006a6200007760201b60201c565b5f8190555050506200059e565b5f90565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000dc8262000094565b810181811067ffffffffffffffff82111715620000fe57620000fd620000a4565b5b80604052505050565b5f620001126200007b565b9050620001208282620000d1565b919050565b5f67ffffffffffffffff821115620001425762000141620000a4565b5b6200014d8262000094565b9050602081019050919050565b5f5b83811015620001795780820151818401526020810190506200015c565b5f8484015250505050565b5f6200019a620001948462000125565b62000107565b905082815260208101848484011115620001b957620001b862000090565b5b620001c68482856200015a565b509392505050565b5f82601f830112620001e557620001e46200008c565b5b8151620001f784826020860162000184565b91505092915050565b5f806040838503121562000219576200021862000084565b5b5f83015167ffffffffffffffff81111562000239576200023862000088565b5b6200024785828601620001ce565b925050602083015167ffffffffffffffff8111156200026b576200026a62000088565b5b6200027985828601620001ce565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002d257607f821691505b602082108103620002e857620002e76200028d565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200034c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035886836200030f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003a26200039c620003968462000370565b62000379565b62000370565b9050919050565b5f819050919050565b620003bd8362000382565b620003d5620003cc82620003a9565b8484546200031b565b825550505050565b5f90565b620003eb620003dd565b620003f8818484620003b2565b505050565b5b818110156200041f57620004135f82620003e1565b600181019050620003fe565b5050565b601f8211156200046e576200043881620002ee565b620004438462000300565b8101602085101562000453578190505b6200046b620004628562000300565b830182620003fd565b50505b505050565b5f82821c905092915050565b5f620004905f198460080262000473565b1980831691505092915050565b5f620004aa83836200047f565b9150826002028217905092915050565b620004c58262000283565b67ffffffffffffffff811115620004e157620004e0620000a4565b5b620004ed8254620002ba565b620004fa82828562000423565b5f60209050601f83116001811462000530575f84156200051b578287015190505b6200052785826200049d565b86555062000596565b601f1984166200054086620002ee565b5f5b82811015620005695784890151825560018201915060208501945060208101905062000542565b8683101562000589578489015162000585601f8916826200047f565b8355505b6001600288020188555050505b505050505050565b61186080620005ac5f395ff3fe6080604052600436106100dc575f3560e01c80636352211e1161007e578063a22cb46511610058578063a22cb465146102a2578063b88d4fde146102ca578063c87b56dd146102e6578063e985e9c514610322576100dc565b80636352211e1461020057806370a082311461023c57806395d89b4114610278576100dc565b8063095ea7b3116100ba578063095ea7b31461018257806318160ddd1461019e57806323b872dd146101c857806342842e0e146101e4576100dc565b806301ffc9a7146100e057806306fdde031461011c578063081812fc14610146575b5f80fd5b3480156100eb575f80fd5b506101066004803603810190610101919061117a565b61035e565b60405161011391906111bf565b60405180910390f35b348015610127575f80fd5b506101306103ef565b60405161013d9190611262565b60405180910390f35b348015610151575f80fd5b5061016c600480360381019061016791906112b5565b61047f565b604051610179919061131f565b60405180910390f35b61019c60048036038101906101979190611362565b6104f9565b005b3480156101a9575f80fd5b506101b2610638565b6040516101bf91906113af565b60405180910390f35b6101e260048036038101906101dd91906113c8565b61064d565b005b6101fe60048036038101906101f991906113c8565b61095b565b005b34801561020b575f80fd5b50610226600480360381019061022191906112b5565b61097a565b604051610233919061131f565b60405180910390f35b348015610247575f80fd5b50610262600480360381019061025d9190611418565b61098b565b60405161026f91906113af565b60405180910390f35b348015610283575f80fd5b5061028c610a40565b6040516102999190611262565b60405180910390f35b3480156102ad575f80fd5b506102c860048036038101906102c3919061146d565b610ad0565b005b6102e460048036038101906102df91906115d7565b610bd6565b005b3480156102f1575f80fd5b5061030c600480360381019061030791906112b5565b610c48565b6040516103199190611262565b60405180910390f35b34801561032d575f80fd5b5061034860048036038101906103439190611657565b610ce3565b60405161035591906111bf565b60405180910390f35b5f6301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103b857506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e85750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546103fe906116c2565b80601f016020809104026020016040519081016040528092919081815260200182805461042a906116c2565b80156104755780601f1061044c57610100808354040283529160200191610475565b820191905f5260205f20905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b5f61048982610d71565b6104bf576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60065f8381526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f6105038261097a565b90508073ffffffffffffffffffffffffffffffffffffffff16610524610dcb565b73ffffffffffffffffffffffffffffffffffffffff1614610587576105508161054b610dcb565b610ce3565b610586576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b8260065f8481526020019081526020015f205f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b5f610641610dd2565b6001545f540303905090565b5f61065782610dd6565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106be576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f806106c984610e99565b915091506106df81876106da610dcb565b610ebc565b61072b576106f4866106ef610dcb565b610ce3565b61072a576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610790576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61079d8686866001610eff565b80156107a7575f82555b60055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154600190039190508190555060055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81546001019190508190555061086f8561084b888887610f05565b7c020000000000000000000000000000000000000000000000000000000017610f2c565b60045f8681526020019081526020015f20819055505f7c02000000000000000000000000000000000000000000000000000000008416036108eb575f6001850190505f60045f8381526020019081526020015f2054036108e9575f5481146108e8578360045f8381526020019081526020015f20819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109538686866001610f56565b505050505050565b61097583838360405180602001604052805f815250610bd6565b505050565b5f61098482610dd6565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f1576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054169050919050565b606060038054610a4f906116c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7b906116c2565b8015610ac65780601f10610a9d57610100808354040283529160200191610ac6565b820191905f5260205f20905b815481529060010190602001808311610aa957829003601f168201915b5050505050905090565b8060075f610adc610dcb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610b85610dcb565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bca91906111bf565b60405180910390a35050565b610be184848461064d565b5f8373ffffffffffffffffffffffffffffffffffffffff163b14610c4257610c0b84848484610f5c565b610c41576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c5382610d71565b610c89576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f610c926110a7565b90505f815103610cb05760405180602001604052805f815250610cdb565b80610cba846110bd565b604051602001610ccb92919061172c565b6040516020818303038152906040525b915050919050565b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f81610d7b610dd2565b11158015610d8957505f5482105b8015610dc457505f7c010000000000000000000000000000000000000000000000000000000060045f8581526020019081526020015f205416145b9050919050565b5f33905090565b5f90565b5f8082905080610de4610dd2565b11610e62575f54811015610e61575f60045f8381526020019081526020015f205490505f7c0100000000000000000000000000000000000000000000000000000000821603610e5f575b5f8103610e555760045f836001900393508381526020019081526020015f20549050610e2e565b8092505050610e94565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b5f805f60065f8581526020019081526020015f2090508092508254915050915091565b5f73ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b5f8060e883901c905060e8610f1b86868461110c565b62ffffff16901b9150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610f81610dcb565b8786866040518563ffffffff1660e01b8152600401610fa394939291906117a1565b6020604051808303815f875af1925050508015610fde57506040513d601f19601f82011682018060405250810190610fdb91906117ff565b60015b611054573d805f811461100c576040519150601f19603f3d011682016040523d82523d5f602084013e611011565b606091505b505f81510361104c576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052805f815250905090565b606060a060405101806040526020810391505f825281835b6001156110f757600184039350600a81066030018453600a81049050806110d5575b50828103602084039350808452505050919050565b5f9392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61115981611125565b8114611163575f80fd5b50565b5f8135905061117481611150565b92915050565b5f6020828403121561118f5761118e61111d565b5b5f61119c84828501611166565b91505092915050565b5f8115159050919050565b6111b9816111a5565b82525050565b5f6020820190506111d25f8301846111b0565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561120f5780820151818401526020810190506111f4565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611234826111d8565b61123e81856111e2565b935061124e8185602086016111f2565b6112578161121a565b840191505092915050565b5f6020820190508181035f83015261127a818461122a565b905092915050565b5f819050919050565b61129481611282565b811461129e575f80fd5b50565b5f813590506112af8161128b565b92915050565b5f602082840312156112ca576112c961111d565b5b5f6112d7848285016112a1565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611309826112e0565b9050919050565b611319816112ff565b82525050565b5f6020820190506113325f830184611310565b92915050565b611341816112ff565b811461134b575f80fd5b50565b5f8135905061135c81611338565b92915050565b5f80604083850312156113785761137761111d565b5b5f6113858582860161134e565b9250506020611396858286016112a1565b9150509250929050565b6113a981611282565b82525050565b5f6020820190506113c25f8301846113a0565b92915050565b5f805f606084860312156113df576113de61111d565b5b5f6113ec8682870161134e565b93505060206113fd8682870161134e565b925050604061140e868287016112a1565b9150509250925092565b5f6020828403121561142d5761142c61111d565b5b5f61143a8482850161134e565b91505092915050565b61144c816111a5565b8114611456575f80fd5b50565b5f8135905061146781611443565b92915050565b5f80604083850312156114835761148261111d565b5b5f6114908582860161134e565b92505060206114a185828601611459565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6114e98261121a565b810181811067ffffffffffffffff82111715611508576115076114b3565b5b80604052505050565b5f61151a611114565b905061152682826114e0565b919050565b5f67ffffffffffffffff821115611545576115446114b3565b5b61154e8261121a565b9050602081019050919050565b828183375f83830152505050565b5f61157b6115768461152b565b611511565b905082815260208101848484011115611597576115966114af565b5b6115a284828561155b565b509392505050565b5f82601f8301126115be576115bd6114ab565b5b81356115ce848260208601611569565b91505092915050565b5f805f80608085870312156115ef576115ee61111d565b5b5f6115fc8782880161134e565b945050602061160d8782880161134e565b935050604061161e878288016112a1565b925050606085013567ffffffffffffffff81111561163f5761163e611121565b5b61164b878288016115aa565b91505092959194509250565b5f806040838503121561166d5761166c61111d565b5b5f61167a8582860161134e565b925050602061168b8582860161134e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116d957607f821691505b6020821081036116ec576116eb611695565b5b50919050565b5f81905092915050565b5f611706826111d8565b61171081856116f2565b93506117208185602086016111f2565b80840191505092915050565b5f61173782856116fc565b915061174382846116fc565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6117738261174f565b61177d8185611759565b935061178d8185602086016111f2565b6117968161121a565b840191505092915050565b5f6080820190506117b45f830187611310565b6117c16020830186611310565b6117ce60408301856113a0565b81810360608301526117e08184611769565b905095945050505050565b5f815190506117f981611150565b92915050565b5f602082840312156118145761181361111d565b5b5f611821848285016117eb565b9150509291505056fea264697066735822122094ebd02a95cf735210691c7f49b465720b1f1bed0153aa1471945c861e18c69664736f6c63430008150033";

type ERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721A__factory extends ContractFactory {
  constructor(...args: ERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override deploy(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<
      ERC721A & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721A__factory {
    return super.connect(runner) as ERC721A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new Interface(_abi) as ERC721AInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721A {
    return new Contract(address, _abi, runner) as unknown as ERC721A;
  }
}
